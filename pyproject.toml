[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "oniks-neuralnet"
version = "0.1.0"
authors = [
    {name = "Horlov Danylo", email = "your.email@example.com"},
]
description = "A robust, deterministic, multi-agent framework for complex task automation"
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
keywords = ["ai", "multi-agent", "llm", "automation", "planning", "execution", "framework"]
dependencies = [
    "python-frontmatter==1.1.0",
    "PyYAML==6.0.2",
    "pydantic>=2.9",
    "ollama==0.5.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "black",
    "isort",
    "flake8",
    "mypy",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "myst-parser",
]

[project.scripts]
oniks-demo = "oniks.cli:run_demo"

[project.urls]
Homepage = "https://github.com/your-username/ONIKS_NeuralNet"
Documentation = "https://github.com/your-username/ONIKS_NeuralNet#readme"
Repository = "https://github.com/your-username/ONIKS_NeuralNet"
"Bug Reports" = "https://github.com/your-username/ONIKS_NeuralNet/issues"

[tool.setuptools.packages.find]
include = ["oniks*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["oniks"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--color=yes",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "dist", "build", ".eggs"]